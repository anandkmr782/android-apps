<resources>
    <string name="app_name">Learn Code</string>
    <string name="java">
                                  <br><b>Introduction to java\n</b></br>
        Our core Java programming tutorial is designed for students and working professionals.\n
        Java is an object-oriented, class-based, concurrent, secured and general-purpose computer-programming language.\n
        It is a widely used robust technology.\n\n

                                    <br><b>History of Java</b>\n\n</br>
        The history of Java is very interesting.\n
        Java was originally designed for interactive television,\n
        but it was too advanced technology for the digital cable television industry at the time.\n
        The history of Java starts with the Green Team.\n
        Java team members (also known as Green Team), initiated this project to develop a language
        for digital devices such as set-top boxes, televisions, etc.
        However, it was suited for internet programming. Later, Java technology was incorporated by Netscape.\n

<!--        The principles for creating Java programming were "Simple, Robust, Portable, Platform-independent,-->
<!--        Secured, High Performance, Multithreaded, Architecture Neutral, Object-Oriented, Interpreted, and Dynamic".-->
<!--        Java was developed by James Gosling, who is known as the father of Java, in 1995.-->
<!--        James Gosling and his team members started the project in the early '90s.-->
                                           <br><b>Features of Java</b>\n\n</br>
        The primary objective of Java programming language creation was to make it portable,
        simple and secure programming language. Apart from this, there are also some excellent
        features which play an important role in the popularity of this language.
        The features of Java are also known as java buzzwords.\n

            A list of most important features of Java language is given below.\n
            1. Simple\n
            2. Object-Oriented\n
            3. Portable\n
            4. Platform independent\n
            5. Secured\n
            6. Robust\n
            7. Architecture neutral\n
            8. Interpreted\n
            9. High Performance\n
            10. Multithreaded\n
            11. Distributed\n
            12. Dynamic\n
                                            <br><b>Difference between JDK, JRE, and JVM</b></br>
<!--        We must understand the differences between JDK, JRE, and JVM before proceeding further to Java.-->
<!--        See the brief overview of JVM here.-->

<!--        If you want to get the detailed knowledge of Java Virtual Machine, move to the next page.-->
<!--        Firstly, let's see the differences between the JDK, JRE, and JVM.-->

    </string>
</resources>